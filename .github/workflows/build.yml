# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js Build CI

on:
  push:
    branches: [master]
    tags:
      - 'v*'
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache pnpm modules
        uses: actions/cache@v2
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.7.0
        with:
          mongodb-version: 4.4
      - name: Start Redis
        uses: supercharge/redis-github-action@1.4.0
        with:
          redis-version: 6

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.0.2
          run_install: false
      - name: Install Dependencies
        run: |
          pnpm i --no-optional
      - name: Build project
        run: |
          npm run bundle

      - uses: actions/cache@v2
        id: restore-build
        with:
          path: |
            ./*
            !./node_modules/*
          key: ${{ github.sha }}

      - name: Test Bundle Server
        run: |
          bash scripts/workflow/test-server.sh

  test:
    uses: ./.github/workflows/test.yml

  release:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs: [build, test]
    uses: ./.github/workflows/release.yml
    with:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      JWTSECRET: ${{secrets.JWTSECRET}}
      HOST: ${{secrets.HOST}}
      USER: ${{secrets.USER}}
      PASSWORD: ${{secrets.PASSWORD}}
